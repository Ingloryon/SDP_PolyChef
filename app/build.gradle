apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'com.google.gms.google-services'

jacoco {
    toolVersion = "0.8.4"
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "ch.epfl.polychef"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
        exclude 'META-INF/README.txt'
        //pickFirst 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        signingConfigs {
            debug {
                keyAlias 'debugKeyAlias'
                keyPassword 'PolyChefApp'
                storeFile file('debug.keystore')
                storePassword 'PolyChefApp'
            }
        }
    }

    dependencies {
        implementation 'com.firebaseui:firebase-ui-auth:6.2.0'
        implementation 'com.google.firebase:firebase-analytics:17.2.2'
        implementation 'com.google.firebase:firebase-auth:19.2.0'
        implementation 'com.google.firebase:firebase-firestore:21.4.0'
        implementation 'com.google.firebase:firebase-storage:18.0.0'
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation 'androidx.appcompat:appcompat:1.1.0'
        implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
        implementation 'androidx.legacy:legacy-support-v4:1.0.0'
        implementation 'androidx.navigation:navigation-fragment:2.0.0'
        implementation 'androidx.navigation:navigation-ui:2.0.0'
        implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
        implementation 'com.google.android.material:material:1.1.0'
        implementation 'com.google.firebase:firebase-database:19.2.1'
        implementation 'androidx.cardview:cardview:1.0.0'
        implementation 'androidx.recyclerview:recyclerview:1.1.0'
        implementation 'com.synnapps:carouselview:0.1.5'
        androidTestImplementation 'androidx.test.ext:junit:1.1.1'
        androidTestImplementation 'androidx.test:runner:1.2.0'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
        androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
        androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
        androidTestImplementation 'androidx.test:rules:1.2.0'
        androidTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
        testImplementation 'junit:junit:4.12'
        //testImplementation 'org.hamcrest:hamcrest-library:2.1'
        //androidTestImplementation 'org.hamcrest:hamcrest-library:2.1'
        //androidTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
        //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
        androidTestImplementation 'org.mockito:mockito-android:2.22.0'
        implementation 'com.google.android.material:material:1.1.0'
        implementation 'com.google.firebase:firebase-database:19.2.1'
        implementation 'androidx.legacy:legacy-support-v4:+'
        implementation 'androidx.appcompat:appcompat:1.1.0'
        implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

        //compile project(':pocketsphinx-android-5prealpha-release')
        implementation project(':pocketsphinx-android-5prealpha-release')
        /*implementation project(':aars')
        implementation project(':models')
        implementation 'com.android.support:appcompat-v7:28.1.0'*/
    }
    tasks.withType(Test) {
        jacoco.includeNoLocationClasses = true
        jacoco.excludes = ['jdk.internal.*']
    }

    task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

        reports {
            xml.enabled = true
            html.enabled = true
        }

        def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
        def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
        def mainSrc = "$project.projectDir/src/main/java"

        sourceDirectories = files([mainSrc])
        classDirectories = files([debugTree])
        executionData = fileTree(dir: project.buildDir, includes: [
                'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
        ])
    }
}

ant.importBuild 'assets.xml'
preBuild.dependsOn(list, checksum)
clean.dependsOn(clean_assets)
